# Die Organisation bildet das Root-Element aller Gruppen und wird bei Anlage eines Accoutn automatisch erzeugt.
# Die ID der Organisation wird anschließend als ID für die entsprechende Gruppe verwendet. Nach der Erstellug
# kann die Orgniasation nich mehr gelöscht werden. Wenn neue User der Organisation hinzugfefügt werden,
# dann werden diese automatisch in die entsprechende Gruppe eingefügt.
type Organization @model(subscriptions: null, mutations: { create: "createOrganization", delete: null, update: "updateOrganization" })
  @auth(rules: [
    { allow: public },
    { allow: groups, groupsField: "adminGroup", operations: [read, update] }
    { allow: groups, groupsField: "userGroup", operations: [read] }
    { allow: private, provider: iam },
  ]) {
  id: ID!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  adminGroup: String
  userGroup: String
  name: String!
  # units: [Unit] @hasMany
}

# type Unit @model(subscriptions: null)
#   @auth(rules: [
#     { allow: public },
#     { allow: groups, groupsField: "groups" }
#     { allow: private, provider: iam },
#   ]) {
#   id: ID!
#   createdAt: AWSDateTime
#   updatedAt: AWSDateTime
#   owner: String
#   groups: [String]
#   name: String!
#   organization: Organization @belongsTo
# }

# input CreateOrganizationInput {
#   name: String!
# }

type User {
  id: ID!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  email: String!
}

input CreateUserInput {
  groupID: String! # => Organization ID
  email: String!
}

type Perspective @model(subscriptions: null)
  @auth(rules: [
    { allow: public },
    { allow: private, provider: iam },
    { allow: owner },
    { allow: groups, groupsField: "groups", operations: [read], }
  ]) {
  id: ID!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
  groups: [String]
  name: String!
  description: String
  type: PerspectiveType!
  query: String!
  parameters: [PerspectiveParameter!]
  # status: PerspectiveStatusType
}

type PerspectiveParameter {
  key: String!
  name: String!
  type: PerspectiveParameterType!
  definition: String!
  value: String
}

input RunPerspectiveInput {
  id: ID!
  parameters: [RunPerspectiveParameterInput!]
}

input RunPerspectiveParameterInput {
  key: String!
  type: PerspectiveParameterType!
  value: String
}

type RunPerspectiveResult @aws_cognito_user_pools @aws_api_key  {
  records: AWSJSON! # TODO array AWSJSON zur√ºckgeben?
}

enum PerspectiveType {
  GRAPH
  TABLE
  CHART
  METRIC
}

enum PerspectiveParameterType {
  STRING
  NUMBER
  DATE
  DATETIME
  TIME
}

enum PerspectiveParameterDateOption {
  CUSTOM
  CURRENT_DAY
  BEGIN_OF_MONTH
  END_OF_MONTH
  BEGIN_OF_YEAR
  END_OF_YEAR
}
